name: Debug MetaPipe Build

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set versionName and versionCode for debug build
        run: |
          # Use workflow_dispatch input if provided, else use branch name
          VERSION_NAME="${{ github.event.inputs.debug_version || github.ref_name }}"
          # Remove refs/heads/ if present
          VERSION_NAME="${VERSION_NAME##*/}"
          # Use date/time for versionCode to ensure uniqueness
          VERSION_CODE=$(date +%y%m%d%H%M)
          echo "Setting versionName=$VERSION_NAME, versionCode=$VERSION_CODE"
          sed -i 's/versionName = ".*"/versionName = "'$VERSION_NAME'"/' app/build.gradle.kts
          sed -i 's/versionCode = [0-9]\+/versionCode = '$VERSION_CODE'/' app/build.gradle.kts

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permissions for gradle
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew clean testDebug

      - name: Build Debug APK
        run: |
          chmod +x gradlew
          ./gradlew assembleDebug --stacktrace || { echo "Gradle build failed"; exit 1; }
          ls -R app/build/outputs/apk || echo "No APK directory found"

      - name: Rename Debug APK
        run: |
          VERSION_NAME=$(grep 'versionName = ' app/build.gradle.kts | head -1 | cut -d '"' -f2)
          NEW_NAME="MetaPipe ${VERSION_NAME} debug.apk"
          mv app/build/outputs/apk/debug/app-debug.apk "$NEW_NAME"
          echo "APK renamed to $NEW_NAME"

      - name: Upload Debug APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-artifact
          path: MetaPipe*debug.apk
          compression-level: 5